{"version":3,"sources":["dummyImage/dummyMap.PNG","components/RenderedByMap/User.js","components/RenderedByMap/Users.js","components/CurrentLocation.js","components/MapContainer.js","components/Locations.js","components/RenderedByMap/Emoji.js","components/RenderedByMap/Profile.js","components/Notification.js","App.js","serviceWorker.js","stores/userInstances.js","stores/usersStore.js","stores/locationsStore.js","stores/myProfileStore.js","stores/socketStore.js","index.js","stores/dummyData.js","dummyImage/DorBenLulu.jpg","dummyImage/Efrat.jpg","dummyImage/Vicki.jpeg","dummyImage/Haim.jpg","dummyImage/Yoni.jpg","dummyImage/Eyal.jpg"],"names":["module","exports","inject","observer","useStyles","makeStyles","icon","color","classes","this","user","props","GridListTile","src","picture","alt","firstName","GridListTileBar","title","subtitle","actionIcon","IconButton","aria-label","className","Component","Users","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","nearbyUsers","socketStore","console","log","match","params","location","GridList","cellHeight","key","cols","style","ListSubheader","component","to","map","index","onClick","history","push","_id","age","withRouter","mapStyles","position","CurrentLocation","getCheckIn","coordinates","axios","post","then","response","catch","error","initialCenter","lat","lng","state","currentLocation","prevProps","prevState","google","loadMap","recenterMap","current","maps","center","LatLng","panTo","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","setState","getLocationsNearby","mapRef","refs","node","ReactDOM","findDOMNode","zoom","mapConfig","Object","assign","Map","children","React","Children","c","cloneElement","mapCenter","ref","renderChildren","defaultProps","visible","MapContainer","onMarkerClick","marker","e","selectedPlace","activeMarker","showingInfoWindow","onClose","id","name","GoogleApiWrapper","apiKey","Locations","maxWidth","sendLocation","locationName","getUsersNearMe","locationsArray","nearbyLocations","myProfile","profile","List","top","i","ListItem","button","value","ListItemText","primary","Emoji","handleClick","label","userId","reactionObj","destinationUser","getUserById","socket","sendReaction","usersStore","on","Profile","containerStyle","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","Typography","variant","gutterBottom","status","desiredRelationship","Notification","container","margin","spacing","svg","polygon","fill","common","white","stroke","divider","strokeWidth","Zoom","in","checked","transitionDelay","marginLeft","marginTop","require","config","App","getUsers","getProfile","openSocket","recieveMessage","path","exact","render","Boolean","window","hostname","User","lastName","interestedIn","gender","observable","dummyData","UsersStore","action","users","default","find","LocationsStore","MyProfile","SocketStore","endpoint","socketIOClient","socketId","emit","locationsArry","usersNearMe","setTimeout","stores","locationsStore","document","getElementById","serviceWorker","ready","registration","unregister","HaimImage","isCheckedIn","isDeleted","DorImage","VickiImage","YoniImage","EfratImage","EyalImage"],"mappings":"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","file":"static/js/main.53622c5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dummyMap.ce01d896.PNG\";","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n@inject(\"user\", \"usersStore\", \"locationsStore\", \"myProfile\", \"socketStore\")\n@observer\nclass User extends Component {\n  useStyles = () => {\n    return makeStyles({\n      icon: {\n        color: \"rgba(255, 255, 255, 0.54)\"\n      }\n    });\n  };\n\n  render() {\n\n\n    const classes = this.useStyles();\n    const user = this.props.user;\n\n    const contentStyle = {\n      opacity: \"0.5\"\n    };\n\n    const imageStyle = {\n      height: \"40vh\"\n    };\n\n    return (\n      <GridListTile>\n        <img src={user.picture} alt={user.firstName} />\n        <GridListTileBar\n          title={user.firstName}\n          subtitle={<span>by: {user.firstName}</span>}\n          actionIcon={\n            <IconButton\n              aria-label={`info about ${user.firstName}`}\n              className={classes.icon}\n            >\n              <InfoIcon />\n            </IconButton>\n          }\n        />\n      </GridListTile>\n    );\n  }\n}\n\n//   <Card className={classes.card}>\n//     <CardActionArea>\n//       <CardMedia\n//         component=\"img\"\n//         alt=\"Contemplative Reptile\"\n//         style={imageStyle}\n//         image={user.picture}\n//         title=\"Contemplative Reptile\"\n//       />\n//       <CardContent style={contentStyle}>\n//         <Typography gutterBottom variant=\"h5\" component=\"h2\">\n//           {user.firstName} {user.lastName}\n//         </Typography>\n//         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\n//             Status: {user.status}\n\n//         </Typography>\n//         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\n//              Looking for: {user.desiredRelationship}\n//         </Typography>\n//       </CardContent>\n//     </CardActionArea>\n//   </Card>\nexport default User;\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { withRouter } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\nimport User from \"./User\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n// import tileData from \"./tileData\";\n@inject(\"user\", \"usersStore\", \"locationsStore\", \"myProfile\", \"socketStore\")\n@observer\nclass Users extends Component {\n  useStyles = () => {\n    return makeStyles(theme => ({\n      root: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        overflow: \"hidden\",\n        backgroundColor: theme.palette.background.paper\n      },\n      gridList: {\n        width: 500,\n        height: 450\n      },\n      icon: {\n        color: \"rgba(255, 255, 255, 0.54)\"\n      }\n    }));\n  };\n  render() {\n    const nearbyUsers = this.props.socketStore.nearbyUsers;\n    console.log('nearby users are', nearbyUsers);\n    \n    const currentLocation = this.props.match.params.location;\n    const classes = this.useStyles();\n    // send yoni the location and then load a loading bar and when the loading finishes - rendering the users\n    return (\n      <>\n        {/* {thisDummyUsers.map((user, index) => (\n          <Link to={`/user/${currentLocation}/${user.firstName}`} key={index}>\n            <User user={user} />\n          </Link>\n        ))} */}\n        {/* <div className={classes.root}>\n        <GridList cellHeight={180} className={classes.gridList}>\n          <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\n            <ListSubheader component=\"div\">Elevation</ListSubheader>\n          </GridListTile>\n          {thisDummyUsers.map((user, index) => (\n            <Link to={`/user/${currentLocation}/${user.firstName}`} key={index}>\n              <GridListTile key={user.img} cols={2} style={{ maxHeight: \"100%\" }} >\n                <img src={user.picture} alt={user.firstName} style={{maxWidth: \"100%\", maxHeight: \"100%\"}} />\n                <GridListTileBar\n                  title={user.firstName}\n                  subtitle={\n                    <span>\n                      {user.firstName} {user.lastName}\n                    </span>\n                  }\n                />\n              </GridListTile>\n            </Link>\n          ))}\n        </GridList>\n        </div> */}\n        <div className={classes.root}>\n          <GridList cellHeight={180} className={classes.gridList}>\n            <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\n              <ListSubheader component=\"span\"><Link to=\"/\">Back</Link></ListSubheader>\n            </GridListTile>\n            {nearbyUsers.map((user, index) =>  (\n              <GridListTile\n                key={user.firstName}\n                onClick={() =>\n                  this.props.history.push(`/user/${user._id}`)\n                }\n              >\n                {console.log('user url is ', user.picture)}\n                <img src={user.picture} alt={user.firstName} />\n                <GridListTileBar\n                style={{height: \"auto\"}}\n                  title={`${user.firstName}, ${user.age}`}\n                  actionIcon={\n                    <IconButton\n                      aria-label={`info about ${user.firstName}`}\n                      className={classes.icon}\n                    >\n                      <InfoIcon />\n                    </IconButton>\n                  }\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        </div>\n      </>\n    );\n  }\n}\n// {thisDummyUsers.map((user, index) =>\n//     <Link to={`/user/${currentLocation}/${user.firstName}`} key={index}>\n//         <div key={index}>\n//             <h2>{user.firstName}</h2>\n//             <h4>{user.age}</h4>\n//             <h5>{user.gender}</h5>\n//             <h5>{user.status}</h5>\n//             <h5>{user.desiredRelationship}</h5>\n//             <img src={user.picture} />\n//         </div>\n//     </Link>\n// )}\nexport default withRouter(Users);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { observer, inject } from \"mobx-react\";\n// import { Link } from \"react-router-dom\";\nimport axios from 'axios';\n// \n\nconst apiKey = process.env.API_KEY\n\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '40%'\n  }\n};\n\n\n@inject(\"user\", \"usersStore\", \"locationsStore\", \"myProfile\", \"socketStore\")\n@observer\n\n\nclass CurrentLocation extends React.Component {\n\n    constructor(props) {\n        super(props);\n    \n        const { lat, lng } = this.props.initialCenter;\n        this.state = {\n          currentLocation: {\n            lat: lat,\n            lng: lng\n          }\n        }; \n      }\n\n      componentDidUpdate(prevProps, prevState) {\n        if (prevProps.google !== this.props.google) {\n          this.loadMap();\n        }\n        if (prevState.currentLocation !== this.state.currentLocation) {\n          this.recenterMap();\n        }\n      }\n\n      recenterMap() {\n        const map = this.map;\n        const current = this.state.currentLocation;\n    \n        const google = this.props.google;\n        const maps = google.maps;\n    \n        if (map) {\n          let center = new maps.LatLng(current.lat, current.lng);\n          map.panTo(center);\n        }\n      }\n\n      componentDidMount() {\n        if (this.props.centerAroundCurrentLocation) {\n          if (navigator && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition( pos => {\n              const coords = pos.coords;\n              console.log(pos)\n              const coordinates={lat:coords.latitude,lng :coords.longitude }\n              this.getCheckIn(coordinates)\n              // this.getLocations(coordinates)\n              this.setState({\n                currentLocation: {\n                  lat: coords.latitude,\n                  lng: coords.longitude\n                }\n              }, function(){\n                this.props.socketStore.getLocationsNearby(this.state.currentLocation)\n              });\n            });\n          }\n        }\n        this.loadMap();\n      }\n\n      getCheckIn= (coordinates) => {\n        axios.post('/', coordinates)\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log('coordinates',coordinates)\n          console.log(error);\n        });\n      }\n      // getLocations=async (coordinates)=>{\n      //   const response = await axios.get(`/maps/api/place/nearbysearch/json?location=${coordinates.lat},${coordinates.lng}&radius=100&type=bar&key=${apiKey}`);\n        \n      //   console.log(response)\n      //   let places=[]\n      //   places=response.data.results.map(item=> item.name)\n      //   console.log(places)\n      // }\n\n      loadMap() {\n        if (this.props && this.props.google) {\n          // checks if google is available\n          const { google } = this.props;\n          const maps = google.maps;\n    \n          const mapRef = this.refs.map;\n    \n          // reference to the actual DOM element\n          const node = ReactDOM.findDOMNode(mapRef);\n    \n          let { zoom } = this.props;\n          const { lat, lng } = this.state.currentLocation;\n          const center = new maps.LatLng(lat, lng);\n          const mapConfig = Object.assign(\n            {},\n            {\n              center: center,\n              zoom: zoom\n            }\n          );\n    \n          // maps.Map() is constructor that instantiates the map\n          this.map = new maps.Map(node, mapConfig);\n        }\n      }\n\n      renderChildren() {\n        const { children } = this.props;\n        if (!children) return;\n    \n        return React.Children.map(children, c => {\n          if (!c) return;\n          return React.cloneElement(c, {\n            map: this.map,\n            google: this.props.google,\n            mapCenter: this.state.currentLocation\n          });\n        });\n      }\n\n      render() {\n        console.log(this.state)\n        const style = Object.assign({}, mapStyles.map);\n        \n       return (\n         <div>\n           <div style={style} ref=\"map\">\n             Loading map...\n           </div>\n           {this.renderChildren()}\n         </div>\n       );\n     }\n\n}\nexport default CurrentLocation;\n\nCurrentLocation.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: -1.2884,\n    lng: 36.8233\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};","import React, { Component } from \"react\";\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\nimport { GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport { observer, inject } from \"mobx-react\";\n// import './App.css';\nimport CurrentLocation from \"./CurrentLocation\";\n\n\nconst apiKey = process.env.API_KEY\n@inject(\"user\", \"usersStore\", \"locationsStore\", \"myProfile\", \"socketStore\")\n@observer\nclass MapContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n\n  onMarkerClick = (props, marker, e) =>{\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  }\n\n    onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    }\n  \n    render() {\n      //isloggiedIn? map component (axios post to yoni with id in the store) : wizard\n      const divStyle = {\n        width: \"100%\",\n        height: \"40%\"\n      }\n\n      return (\n        <div id=\"map-container\">\n          <CurrentLocation centerAroundCurrentLocation google={this.props.google} >\n            <Marker onClick={this.onMarkerClick} name={\"current location\"} style={divStyle} />\n            <InfoWindow\n              marker={this.state.activeMarker}\n              visible={this.state.showingInfoWindow}\n              onClose={this.onClose}\n            >\n              <div>\n                <h4>{this.state.selectedPlace.name}</h4>\n              </div>\n            </InfoWindow>\n          </CurrentLocation>\n        </div>\n      );\n    }\n  }\n  \nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDVj2e5Q-6pNzWHmypcns1iOlIua1Tise0\"\n})(MapContainer);\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport image from \"../dummyImage/dummyMap.PNG\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\n\n@inject(\"user\", \"usersStore\", \"locationsStore\", \"myProfile\", \"socketStore\")\n@observer\n\nclass Locations extends Component {\n  useStyles = () => {\n    return makeStyles(theme => ({\n      root: {\n        width: \"100%\",\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper\n      }\n    }));\n  };\n  sendLocation = (locationName) => {\n    this.props.socketStore.getUsersNearMe(locationName)\n  }\n\n  render() {\n    // const realLocationArray = this.props.locationsStore.locations\n    // function that gets locations from yoni\n    const locationsArray = this.props.socketStore.nearbyLocations;\n    console.log(this.props.socketStore.nearbyLocations)\n    // sending location to yoni - post to yoni with axios\n    // getting from yoni users list //keeps updating\n    console.log(this.props.myProfile.profile)\n    console.log(\"in Locations!\");\n\n    const divStyle = {\n      position: \"absolute\",\n      top: \"40%\",\n      width: \"100%\"\n    };\n\n    const classes = this.useStyles();\n    return (\n      <List\n        component=\"nav\"\n        className={classes.root}\n        aria-label=\"mailbox folders\"\n        style={divStyle}\n      >\n        {locationsArray.map((location, i) => (\n          <ListItem key={i} button value={location.name} onClick={() => this.sendLocation(location.name)}>\n            <Link  to={`/map/${location.name}`} >\n              <ListItemText primary={location.name} />\n            </Link>\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n}\n\nexport default Locations;\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport Emojify from \"react-emojione\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fade from \"@material-ui/core/Fade\";\n@inject(\"user\", \"usersStore\", \"locationsStore\", \"myProfile\", \"socketStore\")\n@observer\nclass Emoji extends Component {\n  handleClick = label => {\n    const userId = this.props.match.params.id;\n    const user = this.props.socketStore.getUserById(userId);\n// console.log('userId is ', userId);\n\n    const reactionObj = {\n      label,\n      destinationUser: user\n    };\n\n    console.log(\"socket is \", this.props.socketStore.socket);\n    console.log('reactionObj is ', reactionObj);\n    \n    this.props.socketStore.sendReaction(reactionObj);\n  };\n\n \n  render() {\n    const userId = this.props.match.params.userId;\n    const user = this.props.usersStore.getUserById(userId);\n\n    this.props.socketStore.socket.on(\"reaction recieved\", reactionObj => {\n      console.log(\"Recieved an Emoji!\");\n    });\n\n    return (\n      //   <span\n      //     className=\"emoji\"\n      //     role=\"img\"\n      //     aria-label={this.props.label ? this.props.label : \"\"}\n      //     aria-hidden={this.props.label ? \"false\" : \"true\"}\n      //   >\n      //     {this.props.symbol}\n      //   </span>\n\n      //       <Tooltip TransitionComponent={Fade} TransitionProps={{ timeout: 600 }} title=\"Add\">\n      //   <Emojify style={{ height: 32, width: 32 }}>:heart:</Emojify>\n      //     </Tooltip>\n      <>\n        <Emojify\n          style={{ height: 32, width: 32 }}\n          onClick={() => this.handleClick(\":heart:\")}\n        >\n          :heart:\n        </Emojify>\n        <Emojify\n          style={{ height: 32, width: 32 }}\n          onClick={() => this.handleClick(\":fire:\")}\n        >\n          :fire:\n        </Emojify>\n        <Emojify\n          style={{ height: 32, width: 32 }}\n          onClick={() => this.handleClick(\":heart_eyes:\")}\n        >\n          :heart_eyes:\n        </Emojify>\n        <Emojify\n          style={{ height: 32, width: 32 }}\n          onClick={() => this.handleClick(\":blush:\")}\n        >\n          :blush:\n        </Emojify>\n        <Emojify\n          style={{ height: 32, width: 32 }}\n          onClick={() => this.handleClick(\":(\")}\n        >\n          :(\n        </Emojify>\n      </>\n    );\n  }\n}\n\nexport default Emoji;\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Emoji from \"./Emoji\";\nimport Paper from '@material-ui/core/Paper';\nimport Zoom from '@material-ui/core/Zoom';\nimport DorImage from \"../../dummyImage/DorBenLulu.jpg\";\n// import Emojify from \"react-emojione\";\n// const Emoji = Emojify\nimport { makeStyles } from '@material-ui/core/styles';\n@inject(\"user\", \"usersStore\", \"locationsStore\", \"myProfile\", \"socketStore\")\n@observer\nclass Profile extends Component {\n\n  \n  render() {\n    console.log(this.props.match)\n    console.log(this.props.socketStore.nearbyUsers)\n    // const user = {\n    //   firstName: \"Dor\",\n    //   lastName: \"Ben Lulu\",\n    //   age: 25,\n    //   status: \"Single\",\n    //   desiredRelationship: \"Serious Relationship\",\n    //   interestedIn: [\"Women\"],\n    //   gender: \"Male\",\n    //   picture: DorImage,\n    //   isCheckedIn: true,\n    //   isDeleted: false\n    // };\n    \n    const userId = this.props.match.params.id;\n    console.log(`user id `, userId);\n    const user = this.props.socketStore.getUserById(userId)\n\n    console.log(`user to display is `, user);\n// console.log(this.props.usersStore.users);\n\n    const containerStyle = {\n      position: \"relative\",\n      overflow: \"hidden\",\n      height: \"40vh\",\n      width: \"100vw\",\n      backgroundImage: `url(${user.picture})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\"\n    };\n\n    const imageStyle = {\n      maxWidth: \"100%\",\n      maxHeight: \"100%\",\n      position: \"absolute\",\n      top: \"0\",\n      bottom: \"0\",\n      margin: \"auto\",\n      width: \"100%\"\n    };\n\n    \n    return (\n      <div>\n        <div style={containerStyle}></div>\n        <Typography variant=\"h6\" gutterBottom>\n          {user.firstName}, {user.age}\n        </Typography>\n        <Typography variant=\"subtitle2\" gutterBottom>\n          {user.status}\n        </Typography>\n        <Typography variant=\"subtitle2\" gutterBottom>\n          Looking for: {user.desiredRelationship}\n        </Typography>\n        <Emoji match={this.props.match}/>\n\n\n      </div>\n    );\n  }\n}\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Emojify from \"react-emojione\";\n@inject(\"user\", \"usersStore\", \"locationsStore\", \"myProfile\", \"socketStore\")\n@observer\nclass Notification extends Component {\n  useStyles = () => {\n    return makeStyles(theme => ({\n      root: {\n        height: \"100vh\"\n      },\n      container: {\n        display: \"flex\"\n      },\n      paper: {\n        margin: theme.spacing(1)\n      },\n      svg: {\n        width: 100,\n        height: 100\n      },\n      polygon: {\n        fill: theme.palette.common.white,\n        stroke: theme.palette.divider,\n        strokeWidth: 1\n      }\n    }));\n  };\n  render() {\n    const classes = this.useStyles();\n    return (\n      <div>\n        <Zoom\n          in={this.props.socketStore.checked}\n          style={{\n            transitionDelay: this.props.socketStore.checked ? \"500ms\" : \"0ms\"\n          }}\n        >\n          \n            <Emojify\n              style={{ height: 80, width: 80, marginLeft: \"40%\", marginTop: \"70%\" }}\n            >\n              :heart:\n            </Emojify>\n        \n        </Zoom>\n      </div>\n    );\n  }\n}\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\n\nimport { observer, inject } from 'mobx-react'\nimport './App.css';\n\nimport Users from \"./components/RenderedByMap/Users\"\nimport User from \"./components/RenderedByMap/User\"\nimport MapContainer from \"./components/MapContainer\"\nimport Locations from './components/Locations'\n// import CurrentLocation from \"./components/CurrentLocation\"\nimport Profile from './components/RenderedByMap/Profile'\nimport Notification from './components/Notification'\nrequire('dotenv').config()\n\n\n\n\n@inject(\"user\", \"usersStore\", \"locationsStore\", \"myProfile\", \"socketStore\")\n@observer\nclass App extends Component {\n    \n\n    componentDidMount() {\n        this.props.usersStore.getUsers()\n        this.props.myProfile.getProfile()\n        this.props.socketStore.openSocket()\n        this.props.socketStore.recieveMessage();\n    }\n\n    render() {\n        //isloggiedIn? map component (axios post to yoni with id in the store) : wizard\n        return ( \n            <Router>\n                {this.props.socketStore.checked ? \n                <Notification />\n                :\n                <div id=\"main-container\">\n                    {/* <div id=\"main-links\">\n                        <Link to=\"/map\" className=\"link\">Map</Link>\n                    </div> */}\n                    {/* need to change path to /map when finished testing */}\n                    <Route path=\"/\" exact render={({ match }) => <><MapContainer /> <Locations/> </>} />\n                    <Route path=\"/map/:location\" exact render={({ match }) => <Users match={match} />} />\n                    <Route path=\"/user/:id\" exact render={({ match }) => <Profile match={match} />} />\n                </div>\n                }\n                \n            </Router>\n        );\n    }\n}\n\n\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {observable} from \"mobx\"\n\nexport class User{\n    @observable id\n    @observable firstName\n    @observable lastName\n    @observable age\n    @observable status\n    @observable desiredRelationship\n    @observable interestedIn\n    @observable gender\n    @observable picture\n    \n    \n    @observable isCheckedIn\n    @observable isDeleted \n    \n    constructor(id, firstName, lastName, age, status, desiredRelationship, interestedIn, gender, picture, coordinates){\n        this._id = id\n        this.firstName = firstName\n        this.lastName = lastName\n        this.age = age\n        this.status = status\n        this.desiredRelationship = desiredRelationship\n        this.interestedIn = interestedIn\n        this.gender = gender\n        this.picture = picture\n    }\n}","import { observable, computed, action } from \"mobx\"\n// import { User } from \"./userInstances\"\n// import axios from \"axios\"\nconst dummyData = require(\"./dummyData\")\n\n\nexport class UsersStore{\n    @observable users = []\n\n    @action getUsers = () => {\n        this.users = dummyData.default\n    }\n\n    @action getUserById = (userId) => {\n        const user = this.users.find(user => user._id == userId)\n        return user;\n    }\n}\n\n\n","import {observable} from \"mobx\"\n\nexport class LocationsStore{\n    @observable locations = []\n\n    // @action getLocation = () => {\n        // this.locations = dummyData.default\n    // }\n\n}","import { observable, action } from \"mobx\"\nimport dummyData from \"./dummyData\"\n\nexport class MyProfile{\n    @observable profile = {}\n\n    @action getProfile = () => {\n        this.profile = dummyData[3]\n        \n    }\n}","import { observable, action, computed } from \"mobx\"\nimport dummyData from \"./dummyData\"\nimport socketIOClient  from \"socket.io-client\"\nexport class SocketStore{\n    endpoint = \"localhost:8080\"\n    socket = socketIOClient(this.endpoint);\n    @observable socketId = \"\";\n    @observable coordinates = {}\n    @observable nearbyLocations = []\n    @observable nearbyUsers = []\n@observable checked = false\n    @action getUserById = (id) => {\n        return this.nearbyUsers.find(user => user._id == id)\n    }\n    @action findSocketDestinationById = (id) => {\n        const socketId = this.nearbyUsers.find(user => user.socketId == id)\n        return socketId;\n    }\n\n    @action openSocket = () => {\n        // const ;\n        this.socket.emit('userId', '5e270a0e2647322352129dae')\n        this.socket.on('userId', (userId) => {\n            console.log('received: '+ userId)\n        })\n    }\n\n\n    @action getLocationsNearby = function(coordinates) {\n        this.socket.emit('GPSlocation', coordinates);\n        this.socket.on('locationsArry',  (locationsArry) => {\n            console.log('locationsArry',locationsArry)\n            this.nearbyLocations = locationsArry\n          })\n    }\n\n    @action getUsersNearMe = (location) => {\n        console.log('before emit location: '+location)\n        this.socket.emit('selectedLocation', location);\n        this.socket.on('usersNearMe',  (usersNearMe) => {\n            console.log('usersNearMe: ' + usersNearMe)\n            this.nearbyUsers = usersNearMe\n          })\n    }\n    @action sendReaction = (reactionObj) => {\n        this.socket.emit('reaction', reactionObj)\n        \n    }\n\n    @action getReaction = (reactionObj) => {\n        this.socket.on('reaction recieved', reactionObj => {\n            console.log('Recieved an Emoji!');\n        })\n    }\n\n    @action recieveMessage = () => { \n        return this.socket.on('reaction recieved', reactionObj => {\n            console.log(\"Recieved Message!\");\n            this.checked = true;\n            setTimeout(() => {\n                this.checked = false; \n                console.log('changed checked to false!');\n\n            }, 5000)\n        }) \n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"mobx-react\"\nimport { User } from \"./stores/userInstances\"\nimport { UsersStore } from \"./stores/usersStore\"\nimport { LocationsStore } from \"./stores/locationsStore\"\nimport { MyProfile } from './stores/myProfileStore';\nimport { SocketStore } from \"./stores/socketStore\"\n\nconst user = new User()\nconst usersStore = new UsersStore()\nconst locationsStore = new LocationsStore()\nconst myProfile = new MyProfile()\nconst socketStore = new SocketStore()\n\nconst stores = {user, usersStore, locationsStore, myProfile, socketStore}\n\n\nReactDOM.render(<Provider {...stores}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nimport DorImage from \"../dummyImage/DorBenLulu.jpg\";\nimport EfratImage from \"../dummyImage/Efrat.jpg\";\nimport VickiImage from \"../dummyImage/Vicki.jpeg\";\nimport HaimImage from \"../dummyImage/Haim.jpg\"\nimport YoniImage from \"../dummyImage/Yoni.jpg\"\nimport EyalImage from \"../dummyImage/Eyal.jpg\"\n\nconst dummyData =  [\n    {\n        id: \"1234\",\n        firstName: \"Haim\",\n        lastName: \"Ruso\",\n        age: 29,\n        status: \"Single\",\n        desiredRelationship: \"Serious Relationship\",\n        interestedIn: [\"Women\"],\n        gender: \"Male\",\n        picture: HaimImage,\n        isCheckedIn: true,\n        isDeleted: false   \n    },\n    {\n        id: \"5678\",\n        firstName: \"Dor\",\n        lastName: \"Ben Lulu\",\n        age: 25,\n        status: \"Single\",\n        desiredRelationship: \"Serious Relationship\",\n        interestedIn: [\"Women\"],\n        gender: \"Male\",\n        picture: DorImage,\n        isCheckedIn: true,\n        isDeleted: false   \n    },\n    {\n        id: \"9101\",\n        firstName: \"Vicki\",\n        lastName: \"Menashe\",\n        age: 28,\n        status: \"Single\",\n        desiredRelationship: \"Serious Relationship\",\n        interestedIn: [\"Men\"],\n        gender: \"Female\",\n        picture: VickiImage,\n        isCheckedIn: true,\n        isDeleted: false   \n    },\n    {\n        id: \"1121\",\n        firstName: \"Yoni\",\n        lastName: \"Shalev\",\n        age: 36,\n        status: \"Single\",\n        desiredRelationship: \"Hookups\",\n        interestedIn: [\"Women\"],\n        gender: \"Male\",\n        picture: YoniImage,\n        isCheckedIn: true,\n        isDeleted: false   \n    },\n    {\n        id: \"3141\",\n        firstName: \"Efrat\",\n        lastName: \"Harel\",\n        age: 25,\n        status: \"Single\",\n        desiredRelationship: \"Serious Relationship\",\n        interestedIn: [\"Men\"],\n        gender: \"Female\",\n        picture: EfratImage,\n        isCheckedIn: true,\n        isDeleted: false   \n    },\n    {\n        id: \"5161\",\n        firstName: \"Eyal\",\n        lastName: \"Pundak\",\n        age: 34,\n        status: \"Single\",\n        desiredRelationship: \"Serious Relationship\",\n        interestedIn: [\"Women\"],\n        gender: \"Male\",\n        picture: EyalImage,\n        isCheckedIn: true,\n        isDeleted: false   \n    }\n]\n\nexport default dummyData","module.exports = __webpack_public_path__ + \"static/media/DorBenLulu.19e8bae3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Efrat.372d057d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Vicki.30f20c22.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Haim.4e742aca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Yoni.7955fac2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Eyal.9d1324d5.jpg\";"],"sourceRoot":""}